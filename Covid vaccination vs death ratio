{"metadata":{"orig_nbformat":4,"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"name":"python","version":"3.8.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# Welcome to an example Binder","metadata":{}},{"cell_type":"markdown","source":"We need `seaborn`, which shall be included it in `requirements.txt` file","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"%ls","metadata":{"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":" 07_02_pie_box_scatter_bubble.ipynb     requierementsEXL\n Canada.xlsx                            requirements.txt\n covid_vaccination_vs_death_ratio.csv   runtime.txt\n \u001b[0m\u001b[01;34mdatasets\u001b[0m/                              \u001b[01;34msession_01\u001b[0m/\n nhanes_2015_2016.csv                  'Top 100 most Streamed - Sheet1.csv'\n README.md                              welcome_binder.ipynb\n","output_type":"stream"}]},{"cell_type":"code","source":"path = 'covid_vaccination_vs_death_ratio.csv'\ndf = pd.read_csv(path)\ndf","metadata":{"trusted":true},"execution_count":3,"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"       Unnamed: 0      country iso_code        date  total_vaccinations  \\\n0               0  Afghanistan      AFG  2021-05-11            504502.0   \n1               1  Afghanistan      AFG  2021-05-20            547901.0   \n2               2  Afghanistan      AFG  2021-05-24            573277.0   \n3               3  Afghanistan      AFG  2021-05-26            590454.0   \n4               4  Afghanistan      AFG  2021-05-27            593313.0   \n...           ...          ...      ...         ...                 ...   \n19252       19252     Zimbabwe      ZWE  2021-09-21           5084031.0   \n19253       19253     Zimbabwe      ZWE  2021-09-22           5123522.0   \n19254       19254     Zimbabwe      ZWE  2021-09-23           5166508.0   \n19255       19255     Zimbabwe      ZWE  2021-09-24           5197363.0   \n19256       19256     Zimbabwe      ZWE  2021-09-25           5218672.0   \n\n       people_vaccinated  people_fully_vaccinated  New_deaths  population  \\\n0               448878.0                  55624.0          12  40064421.0   \n1               470341.0                  77560.0          10  40064421.0   \n2               476367.0                  96910.0          10  40064421.0   \n3               479372.0                 111082.0          19  40064421.0   \n4               479574.0                 113739.0          14  40064421.0   \n...                  ...                      ...         ...         ...   \n19252          2976212.0                2107819.0           2  15150655.0   \n19253          2992048.0                2131474.0           0  15150655.0   \n19254          3007945.0                2158563.0          23  15150655.0   \n19255          3021593.0                2175770.0           8  15150655.0   \n19256          3030042.0                2188630.0           0  15150655.0   \n\n           ratio  \n0       1.120391  \n1       1.173962  \n2       1.189003  \n3       1.196503  \n4       1.197007  \n...          ...  \n19252  19.644114  \n19253  19.748638  \n19254  19.853564  \n19255  19.943646  \n19256  19.999413  \n\n[19257 rows x 10 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>country</th>\n      <th>iso_code</th>\n      <th>date</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>New_deaths</th>\n      <th>population</th>\n      <th>ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>2021-05-11</td>\n      <td>504502.0</td>\n      <td>448878.0</td>\n      <td>55624.0</td>\n      <td>12</td>\n      <td>40064421.0</td>\n      <td>1.120391</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>2021-05-20</td>\n      <td>547901.0</td>\n      <td>470341.0</td>\n      <td>77560.0</td>\n      <td>10</td>\n      <td>40064421.0</td>\n      <td>1.173962</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>2021-05-24</td>\n      <td>573277.0</td>\n      <td>476367.0</td>\n      <td>96910.0</td>\n      <td>10</td>\n      <td>40064421.0</td>\n      <td>1.189003</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>2021-05-26</td>\n      <td>590454.0</td>\n      <td>479372.0</td>\n      <td>111082.0</td>\n      <td>19</td>\n      <td>40064421.0</td>\n      <td>1.196503</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>2021-05-27</td>\n      <td>593313.0</td>\n      <td>479574.0</td>\n      <td>113739.0</td>\n      <td>14</td>\n      <td>40064421.0</td>\n      <td>1.197007</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>19252</th>\n      <td>19252</td>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n      <td>2021-09-21</td>\n      <td>5084031.0</td>\n      <td>2976212.0</td>\n      <td>2107819.0</td>\n      <td>2</td>\n      <td>15150655.0</td>\n      <td>19.644114</td>\n    </tr>\n    <tr>\n      <th>19253</th>\n      <td>19253</td>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n      <td>2021-09-22</td>\n      <td>5123522.0</td>\n      <td>2992048.0</td>\n      <td>2131474.0</td>\n      <td>0</td>\n      <td>15150655.0</td>\n      <td>19.748638</td>\n    </tr>\n    <tr>\n      <th>19254</th>\n      <td>19254</td>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n      <td>2021-09-23</td>\n      <td>5166508.0</td>\n      <td>3007945.0</td>\n      <td>2158563.0</td>\n      <td>23</td>\n      <td>15150655.0</td>\n      <td>19.853564</td>\n    </tr>\n    <tr>\n      <th>19255</th>\n      <td>19255</td>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n      <td>2021-09-24</td>\n      <td>5197363.0</td>\n      <td>3021593.0</td>\n      <td>2175770.0</td>\n      <td>8</td>\n      <td>15150655.0</td>\n      <td>19.943646</td>\n    </tr>\n    <tr>\n      <th>19256</th>\n      <td>19256</td>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n      <td>2021-09-25</td>\n      <td>5218672.0</td>\n      <td>3030042.0</td>\n      <td>2188630.0</td>\n      <td>0</td>\n      <td>15150655.0</td>\n      <td>19.999413</td>\n    </tr>\n  </tbody>\n</table>\n<p>19257 rows × 10 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"dist = df['country']\ndist\ntype(dist)","metadata":{"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"pandas.core.series.Series"},"metadata":{}}]},{"cell_type":"code","source":"distance = df[['country']]\ndistance","metadata":{"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"           country\n0      Afghanistan\n1      Afghanistan\n2      Afghanistan\n3      Afghanistan\n4      Afghanistan\n...            ...\n19252     Zimbabwe\n19253     Zimbabwe\n19254     Zimbabwe\n19255     Zimbabwe\n19256     Zimbabwe\n\n[19257 rows x 1 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Afghanistan</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Afghanistan</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Afghanistan</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Afghanistan</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>19252</th>\n      <td>Zimbabwe</td>\n    </tr>\n    <tr>\n      <th>19253</th>\n      <td>Zimbabwe</td>\n    </tr>\n    <tr>\n      <th>19254</th>\n      <td>Zimbabwe</td>\n    </tr>\n    <tr>\n      <th>19255</th>\n      <td>Zimbabwe</td>\n    </tr>\n    <tr>\n      <th>19256</th>\n      <td>Zimbabwe</td>\n    </tr>\n  </tbody>\n</table>\n<p>19257 rows × 1 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"ndf = df [['country', 'total_vaccinations', 'people_vaccinated', 'people_fully_vaccinated', 'New_deaths']]\nndf","metadata":{"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"           country  total_vaccinations  people_vaccinated  \\\n0      Afghanistan            504502.0           448878.0   \n1      Afghanistan            547901.0           470341.0   \n2      Afghanistan            573277.0           476367.0   \n3      Afghanistan            590454.0           479372.0   \n4      Afghanistan            593313.0           479574.0   \n...            ...                 ...                ...   \n19252     Zimbabwe           5084031.0          2976212.0   \n19253     Zimbabwe           5123522.0          2992048.0   \n19254     Zimbabwe           5166508.0          3007945.0   \n19255     Zimbabwe           5197363.0          3021593.0   \n19256     Zimbabwe           5218672.0          3030042.0   \n\n       people_fully_vaccinated  New_deaths  \n0                      55624.0          12  \n1                      77560.0          10  \n2                      96910.0          10  \n3                     111082.0          19  \n4                     113739.0          14  \n...                        ...         ...  \n19252                2107819.0           2  \n19253                2131474.0           0  \n19254                2158563.0          23  \n19255                2175770.0           8  \n19256                2188630.0           0  \n\n[19257 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>New_deaths</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Afghanistan</td>\n      <td>504502.0</td>\n      <td>448878.0</td>\n      <td>55624.0</td>\n      <td>12</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>547901.0</td>\n      <td>470341.0</td>\n      <td>77560.0</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Afghanistan</td>\n      <td>573277.0</td>\n      <td>476367.0</td>\n      <td>96910.0</td>\n      <td>10</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Afghanistan</td>\n      <td>590454.0</td>\n      <td>479372.0</td>\n      <td>111082.0</td>\n      <td>19</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Afghanistan</td>\n      <td>593313.0</td>\n      <td>479574.0</td>\n      <td>113739.0</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>19252</th>\n      <td>Zimbabwe</td>\n      <td>5084031.0</td>\n      <td>2976212.0</td>\n      <td>2107819.0</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>19253</th>\n      <td>Zimbabwe</td>\n      <td>5123522.0</td>\n      <td>2992048.0</td>\n      <td>2131474.0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>19254</th>\n      <td>Zimbabwe</td>\n      <td>5166508.0</td>\n      <td>3007945.0</td>\n      <td>2158563.0</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>19255</th>\n      <td>Zimbabwe</td>\n      <td>5197363.0</td>\n      <td>3021593.0</td>\n      <td>2175770.0</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>19256</th>\n      <td>Zimbabwe</td>\n      <td>5218672.0</td>\n      <td>3030042.0</td>\n      <td>2188630.0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>19257 rows × 5 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true},"execution_count":10,"outputs":[{"execution_count":10,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0  total_vaccinations  people_vaccinated  \\\ncount  19257.000000        1.925700e+04       1.925700e+04   \nmean    9628.000000        1.657053e+07       1.072298e+07   \nstd     5559.161403        5.887682e+07       3.918869e+07   \nmin        0.000000        1.630000e+02       1.620000e+02   \n25%     4814.000000        3.811710e+05       2.817130e+05   \n50%     9628.000000        2.108172e+06       1.382831e+06   \n75%    14442.000000        9.987918e+06       5.760947e+06   \nmax    19256.000000        2.174043e+09       1.100842e+09   \n\n       people_fully_vaccinated    New_deaths    population         ratio  \ncount             1.925700e+04  19257.000000  1.925700e+04  19257.000000  \nmean              5.987480e+06    110.592927  4.823571e+07     28.595815  \nstd               2.167499e+07    357.610074  1.553499e+08     24.389301  \nmin               1.000000e+00    -41.000000  1.619000e+03      0.002980  \n25%               8.647700e+04      1.000000  2.871560e+06      6.685156  \n50%               6.586820e+05      9.000000  1.016042e+07     22.252118  \n75%               3.632394e+06     60.000000  3.815000e+07     47.862965  \nmax               1.022207e+09   8786.000000  1.445426e+09    118.321562  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>people_fully_vaccinated</th>\n      <th>New_deaths</th>\n      <th>population</th>\n      <th>ratio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>19257.000000</td>\n      <td>1.925700e+04</td>\n      <td>1.925700e+04</td>\n      <td>1.925700e+04</td>\n      <td>19257.000000</td>\n      <td>1.925700e+04</td>\n      <td>19257.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>9628.000000</td>\n      <td>1.657053e+07</td>\n      <td>1.072298e+07</td>\n      <td>5.987480e+06</td>\n      <td>110.592927</td>\n      <td>4.823571e+07</td>\n      <td>28.595815</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5559.161403</td>\n      <td>5.887682e+07</td>\n      <td>3.918869e+07</td>\n      <td>2.167499e+07</td>\n      <td>357.610074</td>\n      <td>1.553499e+08</td>\n      <td>24.389301</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>1.630000e+02</td>\n      <td>1.620000e+02</td>\n      <td>1.000000e+00</td>\n      <td>-41.000000</td>\n      <td>1.619000e+03</td>\n      <td>0.002980</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4814.000000</td>\n      <td>3.811710e+05</td>\n      <td>2.817130e+05</td>\n      <td>8.647700e+04</td>\n      <td>1.000000</td>\n      <td>2.871560e+06</td>\n      <td>6.685156</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>9628.000000</td>\n      <td>2.108172e+06</td>\n      <td>1.382831e+06</td>\n      <td>6.586820e+05</td>\n      <td>9.000000</td>\n      <td>1.016042e+07</td>\n      <td>22.252118</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>14442.000000</td>\n      <td>9.987918e+06</td>\n      <td>5.760947e+06</td>\n      <td>3.632394e+06</td>\n      <td>60.000000</td>\n      <td>3.815000e+07</td>\n      <td>47.862965</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>19256.000000</td>\n      <td>2.174043e+09</td>\n      <td>1.100842e+09</td>\n      <td>1.022207e+09</td>\n      <td>8786.000000</td>\n      <td>1.445426e+09</td>\n      <td>118.321562</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"histogram = df['total_vaccinations'].plot(kind = 'hist')","metadata":{"trusted":true},"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"sns.lmplot(x='people_fully_vaccinated',\n           y='New_deaths',\n           data=df,\n           fit_reg=True,\n          )\nplt.title('Scatter plot of people vaccinated vs deaths')","metadata":{"trusted":true},"execution_count":13,"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"Text(0.5, 1.0, 'Scatter plot of people vaccinated vs deaths')"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 360x360 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"sns.boxplot(data = df.loc[:,['people_fully_vaccinated']])","metadata":{"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"<matplotlib.axes._subplots.AxesSubplot at 0x7fb0c4749d00>"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"line_plot = df.plot(kind ='line')","metadata":{"trusted":true},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 432x288 with 1 Axes>","image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":"df.drop(['date', 'iso_code', 'ratio'],\n        axis = 1,\n        inplace = True)\ndf.columns","metadata":{"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"Index(['Unnamed: 0', 'country', 'total_vaccinations', 'people_vaccinated',\n       'people_fully_vaccinated', 'New_deaths', 'population'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"code","source":"df.set_index('country',\n             inplace = True)\ndf","metadata":{"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"             Unnamed: 0  total_vaccinations  people_vaccinated  New_deaths  \\\ncountry                                                                      \nAfghanistan           0            504502.0           448878.0          12   \nAfghanistan           1            547901.0           470341.0          10   \nAfghanistan           2            573277.0           476367.0          10   \nAfghanistan           3            590454.0           479372.0          19   \nAfghanistan           4            593313.0           479574.0          14   \n...                 ...                 ...                ...         ...   \nZimbabwe          19252           5084031.0          2976212.0           2   \nZimbabwe          19253           5123522.0          2992048.0           0   \nZimbabwe          19254           5166508.0          3007945.0          23   \nZimbabwe          19255           5197363.0          3021593.0           8   \nZimbabwe          19256           5218672.0          3030042.0           0   \n\n             population  \ncountry                  \nAfghanistan  40064421.0  \nAfghanistan  40064421.0  \nAfghanistan  40064421.0  \nAfghanistan  40064421.0  \nAfghanistan  40064421.0  \n...                 ...  \nZimbabwe     15150655.0  \nZimbabwe     15150655.0  \nZimbabwe     15150655.0  \nZimbabwe     15150655.0  \nZimbabwe     15150655.0  \n\n[19257 rows x 5 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>New_deaths</th>\n      <th>population</th>\n    </tr>\n    <tr>\n      <th>country</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Afghanistan</th>\n      <td>0</td>\n      <td>504502.0</td>\n      <td>448878.0</td>\n      <td>12</td>\n      <td>40064421.0</td>\n    </tr>\n    <tr>\n      <th>Afghanistan</th>\n      <td>1</td>\n      <td>547901.0</td>\n      <td>470341.0</td>\n      <td>10</td>\n      <td>40064421.0</td>\n    </tr>\n    <tr>\n      <th>Afghanistan</th>\n      <td>2</td>\n      <td>573277.0</td>\n      <td>476367.0</td>\n      <td>10</td>\n      <td>40064421.0</td>\n    </tr>\n    <tr>\n      <th>Afghanistan</th>\n      <td>3</td>\n      <td>590454.0</td>\n      <td>479372.0</td>\n      <td>19</td>\n      <td>40064421.0</td>\n    </tr>\n    <tr>\n      <th>Afghanistan</th>\n      <td>4</td>\n      <td>593313.0</td>\n      <td>479574.0</td>\n      <td>14</td>\n      <td>40064421.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>19252</td>\n      <td>5084031.0</td>\n      <td>2976212.0</td>\n      <td>2</td>\n      <td>15150655.0</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>19253</td>\n      <td>5123522.0</td>\n      <td>2992048.0</td>\n      <td>0</td>\n      <td>15150655.0</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>19254</td>\n      <td>5166508.0</td>\n      <td>3007945.0</td>\n      <td>23</td>\n      <td>15150655.0</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>19255</td>\n      <td>5197363.0</td>\n      <td>3021593.0</td>\n      <td>8</td>\n      <td>15150655.0</td>\n    </tr>\n    <tr>\n      <th>Zimbabwe</th>\n      <td>19256</td>\n      <td>5218672.0</td>\n      <td>3030042.0</td>\n      <td>0</td>\n      <td>15150655.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>19257 rows × 5 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df.describe()","metadata":{"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"         Unnamed: 0  total_vaccinations  people_vaccinated    New_deaths  \\\ncount  19257.000000        1.925700e+04       1.925700e+04  19257.000000   \nmean    9628.000000        1.657053e+07       1.072298e+07    110.592927   \nstd     5559.161403        5.887682e+07       3.918869e+07    357.610074   \nmin        0.000000        1.630000e+02       1.620000e+02    -41.000000   \n25%     4814.000000        3.811710e+05       2.817130e+05      1.000000   \n50%     9628.000000        2.108172e+06       1.382831e+06      9.000000   \n75%    14442.000000        9.987918e+06       5.760947e+06     60.000000   \nmax    19256.000000        2.174043e+09       1.100842e+09   8786.000000   \n\n         population  \ncount  1.925700e+04  \nmean   4.823571e+07  \nstd    1.553499e+08  \nmin    1.619000e+03  \n25%    2.871560e+06  \n50%    1.016042e+07  \n75%    3.815000e+07  \nmax    1.445426e+09  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>total_vaccinations</th>\n      <th>people_vaccinated</th>\n      <th>New_deaths</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>19257.000000</td>\n      <td>1.925700e+04</td>\n      <td>1.925700e+04</td>\n      <td>19257.000000</td>\n      <td>1.925700e+04</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>9628.000000</td>\n      <td>1.657053e+07</td>\n      <td>1.072298e+07</td>\n      <td>110.592927</td>\n      <td>4.823571e+07</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>5559.161403</td>\n      <td>5.887682e+07</td>\n      <td>3.918869e+07</td>\n      <td>357.610074</td>\n      <td>1.553499e+08</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>1.630000e+02</td>\n      <td>1.620000e+02</td>\n      <td>-41.000000</td>\n      <td>1.619000e+03</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>4814.000000</td>\n      <td>3.811710e+05</td>\n      <td>2.817130e+05</td>\n      <td>1.000000</td>\n      <td>2.871560e+06</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>9628.000000</td>\n      <td>2.108172e+06</td>\n      <td>1.382831e+06</td>\n      <td>9.000000</td>\n      <td>1.016042e+07</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>14442.000000</td>\n      <td>9.987918e+06</td>\n      <td>5.760947e+06</td>\n      <td>60.000000</td>\n      <td>3.815000e+07</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>19256.000000</td>\n      <td>2.174043e+09</td>\n      <td>1.100842e+09</td>\n      <td>8786.000000</td>\n      <td>1.445426e+09</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}